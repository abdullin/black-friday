add new products
------------------------------------------
GIVEN:
WHEN:
  AddProductsReq skus:"one"
THEN:
  AddProductsResp uids:"00000000-0000-0000-0000-000000000001"
EVENTS:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"one"

==========================================
add new products
------------------------------------------
GIVEN:
WHEN:
  AddProductsReq skus:"one" skus:"two"
THEN:
  AddProductsResp uids:"00000000-0000-0000-0000-000000000001" uids:"00000000-0000-0000-0000-000000000002"
EVENTS:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"one"
  ProductAdded uid:"00000000-0000-0000-0000-000000000002" sku:"two"

==========================================
can't add product with duplicate skus
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"cola"
WHEN:
  AddProductsReq skus:"cola"
ERROR:
  AlreadyExists: already exists

==========================================
can't add multiple product with duplicate skus
------------------------------------------
GIVEN:
WHEN:
  AddProductsReq skus:"one" skus:"one"
ERROR:
  AlreadyExists: already exists

==========================================
add location
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{name:"Shelf"}
THEN:
  AddLocationsResp locs:{name:"Shelf" uid:"00000000-0000-0000-0000-000000000001"}
EVENTS:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"

==========================================
add locations to an existing one
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WH"
WHEN:
  AddLocationsReq locs:{name:"S1"} locs:{name:"S2"} parent:"00000000-0000-0000-0000-000000000001"
THEN:
  AddLocationsResp locs:{name:"S1" uid:"00000000-0000-0000-0000-000000000002" parent:"00000000-0000-0000-0000-000000000001"} locs:{name:"S2" uid:"00000000-0000-0000-0000-000000000003" parent:"00000000-0000-0000-0000-000000000001"}
EVENTS:
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"S1" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"S2" parent:"00000000-0000-0000-0000-000000000001"

==========================================
add nested locations to an existing one
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
WHEN:
  AddLocationsReq locs:{name:"Shelf" locs:{name:"Box"}} parent:"00000000-0000-0000-0000-000000000001"
THEN:
  AddLocationsResp locs:{name:"Shelf" uid:"00000000-0000-0000-0000-000000000002" parent:"00000000-0000-0000-0000-000000000001" locs:{name:"Box" uid:"00000000-0000-0000-0000-000000000003" parent:"00000000-0000-0000-0000-000000000002"}}
EVENTS:
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Shelf" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Box" parent:"00000000-0000-0000-0000-000000000002"

==========================================
add location with wrong parent
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{name:"L"} parent:"00000000-0000-0000-0000-00000000002a"
ERROR:
  NotFound: location not found

==========================================
add location with nil name
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{}
ERROR:
  InvalidArgument: 'name' is nil

==========================================
insert duplicate location name in a batch
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{name:"W"} locs:{name:"W"}
ERROR:
  AlreadyExists: already exists

==========================================
add location with duplicate name
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"W"
WHEN:
  AddLocationsReq locs:{name:"W"}
ERROR:
  AlreadyExists: already exists

==========================================
duplicates are OK, if they don't share a parent
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WHS1"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Inbox" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"WHS2"
WHEN:
  AddLocationsReq locs:{name:"Inbox"} parent:"00000000-0000-0000-0000-000000000003"
THEN:
  AddLocationsResp locs:{name:"Inbox" uid:"00000000-0000-0000-0000-000000000004" parent:"00000000-0000-0000-0000-000000000003"}
EVENTS:
  LocationAdded uid:"00000000-0000-0000-0000-000000000004" name:"Inbox" parent:"00000000-0000-0000-0000-000000000003"

==========================================
query one specific location
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf1"
WHEN:
  ListLocationsReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  ListLocationsResp locs:{name:"Shelf1" uid:"00000000-0000-0000-0000-000000000001" parent:"00000000-0000-0000-0000-000000000000"}

==========================================
query all locations in a tree
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WH"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Shelf1" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Shelf2" parent:"00000000-0000-0000-0000-000000000001"
WHEN:
  ListLocationsReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  ListLocationsResp locs:{name:"WH" uid:"00000000-0000-0000-0000-000000000001" parent:"00000000-0000-0000-0000-000000000000" chidren:{name:"Shelf1" uid:"00000000-0000-0000-0000-000000000002" parent:"00000000-0000-0000-0000-000000000001"} chidren:{name:"Shelf2" uid:"00000000-0000-0000-0000-000000000003" parent:"00000000-0000-0000-0000-000000000001"}}

==========================================
query locations from another root
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WH1"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"WH2"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Shelf" parent:"00000000-0000-0000-0000-000000000001"
WHEN:
  ListLocationsReq location:"00000000-0000-0000-0000-000000000002"
THEN:
  ListLocationsResp locs:{name:"WH2" uid:"00000000-0000-0000-0000-000000000002" parent:"00000000-0000-0000-0000-000000000000"}

==========================================
query locations from non-existent location
------------------------------------------
GIVEN:
WHEN:
  ListLocationsReq location:"00000000-0000-0000-0000-000000000001"
ERROR:
  NotFound: location not found

==========================================
query all locations
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WH1"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"WH2"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Shelf" parent:"00000000-0000-0000-0000-000000000001"
WHEN:
  ListLocationsReq 
THEN:
  ListLocationsResp locs:{name:"WH1" uid:"00000000-0000-0000-0000-000000000001" parent:"00000000-0000-0000-0000-000000000000" chidren:{name:"Shelf" uid:"00000000-0000-0000-0000-000000000003" parent:"00000000-0000-0000-0000-000000000001"}} locs:{name:"WH2" uid:"00000000-0000-0000-0000-000000000002" parent:"00000000-0000-0000-0000-000000000000"}

==========================================
move locations
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Container"
WHEN:
  MoveLocationReq uid:"00000000-0000-0000-0000-000000000002" newParent:"00000000-0000-0000-0000-000000000001"
THEN:
  MoveLocationResp 
EVENTS:
  LocationMoved uid:"00000000-0000-0000-0000-000000000002" oldParent:"00000000-0000-0000-0000-000000000000" newParent:"00000000-0000-0000-0000-000000000001"

==========================================
recursive locations are not allowed
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Container" parent:"00000000-0000-0000-0000-000000000001"
WHEN:
  MoveLocationReq uid:"00000000-0000-0000-0000-000000000001" newParent:"00000000-0000-0000-0000-000000000002"
ERROR:
  FailedPrecondition: bad location move

==========================================
don't move location to itself
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
WHEN:
  MoveLocationReq uid:"00000000-0000-0000-0000-000000000001" newParent:"00000000-0000-0000-0000-000000000001"
ERROR:
  FailedPrecondition: bad location move

==========================================
can't touch root
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
WHEN:
  MoveLocationReq uid:"00000000-0000-0000-0000-000000000000" newParent:"00000000-0000-0000-0000-000000000001"
ERROR:
  FailedPrecondition: bad location move

==========================================
query locations after removal
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"NVidia"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:3 OnHand:3
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:-3
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  GetLocInventoryResp 

==========================================
query inventory at a specific location
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"Cola"
  ProductAdded uid:"00000000-0000-0000-0000-000000000002" sku:"Fanta"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000002" OnHandChange:2 OnHand:2
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000002" OnHand:2 Available:2}

==========================================
two boxes sum up their quantity at root
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"Epyc"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf1"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Shelf2"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:2 OnHand:2
  InventoryUpdated location:"00000000-0000-0000-0000-000000000002" product:"00000000-0000-0000-0000-000000000001" OnHandChange:3 OnHand:3
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000000"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:5 Available:5}

==========================================
boxes sums up quantity with parent container
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"Epyc"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Bin" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:2 OnHand:2
  InventoryUpdated location:"00000000-0000-0000-0000-000000000002" product:"00000000-0000-0000-0000-000000000001" OnHandChange:3 OnHand:3
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:5 Available:5}

==========================================
query inventory at root
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"Cola"
  ProductAdded uid:"00000000-0000-0000-0000-000000000002" sku:"Fanta"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000002" OnHandChange:2 OnHand:2
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000000"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000002" OnHand:2 Available:2}

==========================================
moving container to warehouse increases total quantity
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"NVidia 4080"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Unloading" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Shelf" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000003" product:"00000000-0000-0000-0000-000000000001" OnHandChange:5 OnHand:5
  LocationAdded uid:"00000000-0000-0000-0000-000000000004" name:"Container"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000004" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  LocationMoved uid:"00000000-0000-0000-0000-000000000004" newParent:"00000000-0000-0000-0000-000000000002"
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:15 Available:15}

==========================================
moving container to warehouse increases unloading quantity
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"NVidia 4080"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Unloading" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Shelf" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000003" product:"00000000-0000-0000-0000-000000000001" OnHandChange:5 OnHand:5
  LocationAdded uid:"00000000-0000-0000-0000-000000000004" name:"Container"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000004" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  LocationMoved uid:"00000000-0000-0000-0000-000000000004" newParent:"00000000-0000-0000-0000-000000000002"
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000002"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:10 Available:10}

==========================================
moving container with a reservation
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"NVidia 4080"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Unloading" parent:"00000000-0000-0000-0000-000000000001"
  LocationAdded uid:"00000000-0000-0000-0000-000000000003" name:"Shelf" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000003" product:"00000000-0000-0000-0000-000000000001" OnHandChange:5 OnHand:5
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale1" items:{product:"00000000-0000-0000-0000-000000000001" quantity:3 location:"00000000-0000-0000-0000-000000000003"}
  LocationAdded uid:"00000000-0000-0000-0000-000000000004" name:"Container"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000004" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  Reserved reservation:"00000000-0000-0000-0000-000000000002" code:"sale3" items:{product:"00000000-0000-0000-0000-000000000001" quantity:9 location:"00000000-0000-0000-0000-000000000004"}
  LocationMoved uid:"00000000-0000-0000-0000-000000000004" newParent:"00000000-0000-0000-0000-000000000002"
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:15 Available:3}

==========================================
reservation at location reduces availability at location
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"pixel"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:3 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000001"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:10 Available:7}

==========================================
reservation at location reduces availability globally
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"pixel"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:3 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000000"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:10 Available:7}

==========================================
multiple reservations stack
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"pixel"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Warehouse"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale1" items:{product:"00000000-0000-0000-0000-000000000001" quantity:3 location:"00000000-0000-0000-0000-000000000001"}
  Reserved reservation:"00000000-0000-0000-0000-000000000002" code:"sale2" items:{product:"00000000-0000-0000-0000-000000000001" quantity:4 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  GetLocInventoryReq location:"00000000-0000-0000-0000-000000000000"
THEN:
  GetLocInventoryResp items:{Product:"00000000-0000-0000-0000-000000000001" OnHand:10 Available:3}

==========================================
don't allow negative on-hand
------------------------------------------
GIVEN:
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"NVidia"
WHEN:
  UpdateInventoryReq location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:-1
ERROR:
  FailedPrecondition: not enough quantity

==========================================
reserve sale with one item
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
WHEN:
  ReserveReq reservation:"sale" items:{sku:"GPU" quantity:10}
THEN:
  ReserveResp reservation:"00000000-0000-0000-0000-000000000001"
EVENTS:
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:10}

==========================================
reserve sale in a specific location
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
WHEN:
  ReserveReq reservation:"sale" items:{sku:"GPU" quantity:10} location:"00000000-0000-0000-0000-000000000001"
THEN:
  ReserveResp reservation:"00000000-0000-0000-0000-000000000001"
EVENTS:
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:10 location:"00000000-0000-0000-0000-000000000001"}

==========================================
reservation codes must be unique
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:1 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  ReserveReq reservation:"sale" items:{sku:"GPU" quantity:1} location:"00000000-0000-0000-0000-000000000001"
ERROR:
  AlreadyExists: already exists

==========================================
reserve sale in a specific location that doesn't have quantity
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Shelf"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Empty"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
WHEN:
  ReserveReq reservation:"sale" items:{sku:"GPU" quantity:10} location:"00000000-0000-0000-0000-000000000002"
ERROR:
  FailedPrecondition: not enough quantity

==========================================
reserve non-existent sku
------------------------------------------
GIVEN:
WHEN:
  ReserveReq reservation:"test" items:{sku:"sale" quantity:1}
ERROR:
  NotFound: product not found

==========================================
reserve when onHand isn't enough
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"cola"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WHS1"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:2 OnHand:2
WHEN:
  ReserveReq reservation:"test" items:{sku:"cola" quantity:3}
ERROR:
  FailedPrecondition: not enough quantity

==========================================
over-reserve
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"cola"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"WHS1"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000001" product:"00000000-0000-0000-0000-000000000001" OnHandChange:2 OnHand:2
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:1 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  ReserveReq reservation:"test" items:{sku:"cola" quantity:2}
ERROR:
  FailedPrecondition: not enough quantity

==========================================
reserve in a location that contains enough inside
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Container"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Box" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000002" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
WHEN:
  ReserveReq reservation:"sale" items:{sku:"GPU" quantity:10} location:"00000000-0000-0000-0000-000000000001"
THEN:
  ReserveResp reservation:"00000000-0000-0000-0000-000000000001"
EVENTS:
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale" items:{product:"00000000-0000-0000-0000-000000000001" quantity:10 location:"00000000-0000-0000-0000-000000000001"}

==========================================
reserve in a location that doesn't have enough inside
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Container"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Box" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000002" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
WHEN:
  ReserveReq reservation:"sale" items:{sku:"GPU" quantity:11} location:"00000000-0000-0000-0000-000000000001"
ERROR:
  FailedPrecondition: not enough quantity

==========================================
reserve box while container has a reservation on top of it (enough)
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Container"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Box" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000002" product:"00000000-0000-0000-0000-000000000001" OnHandChange:10 OnHand:10
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale0" items:{product:"00000000-0000-0000-0000-000000000001" quantity:5 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  ReserveReq reservation:"sale2" items:{sku:"GPU" quantity:4} location:"00000000-0000-0000-0000-000000000002"
THEN:
  ReserveResp reservation:"00000000-0000-0000-0000-000000000002"
EVENTS:
  Reserved reservation:"00000000-0000-0000-0000-000000000002" code:"sale2" items:{product:"00000000-0000-0000-0000-000000000001" quantity:4 location:"00000000-0000-0000-0000-000000000002"}

==========================================
reserve box while container has a reservation on top of it (not enough)
------------------------------------------
GIVEN:
  ProductAdded uid:"00000000-0000-0000-0000-000000000001" sku:"GPU"
  LocationAdded uid:"00000000-0000-0000-0000-000000000001" name:"Container"
  LocationAdded uid:"00000000-0000-0000-0000-000000000002" name:"Box" parent:"00000000-0000-0000-0000-000000000001"
  InventoryUpdated location:"00000000-0000-0000-0000-000000000002" product:"00000000-0000-0000-0000-000000000001" OnHandChange:3 OnHand:3
  Reserved reservation:"00000000-0000-0000-0000-000000000001" code:"sale0" items:{product:"00000000-0000-0000-0000-000000000001" quantity:2 location:"00000000-0000-0000-0000-000000000001"}
WHEN:
  ReserveReq reservation:"sale2" items:{sku:"GPU" quantity:2} location:"00000000-0000-0000-0000-000000000002"
ERROR:
  FailedPrecondition: not enough quantity


add locations to an existing one
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"WH"
WHEN:
  AddLocationsReq locs:{name:"S1"}  locs:{name:"S2"}  parent:1
THEN:
  AddLocationsResp locs:{name:"S1"  id:2  parent:1}  locs:{name:"S2"  id:3  parent:1}
EVENTS:
  LocationAdded id:2  name:"S1"  parent:1
  LocationAdded id:3  name:"S2"  parent:1

==========================================
add nested locations to an existing one
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Warehouse"
WHEN:
  AddLocationsReq locs:{name:"Shelf"  locs:{name:"Box"}}  parent:1
THEN:
  AddLocationsResp locs:{name:"Shelf"  id:2  parent:1  locs:{name:"Box"  id:3  parent:2}}
EVENTS:
  LocationAdded id:2  name:"Shelf"  parent:1
  LocationAdded id:3  name:"Box"  parent:2

==========================================
add location with wrong parent
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{name:"L"}  parent:42
ERROR:
  NotFound: location not found

==========================================
add location with nill name
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{}
ERROR:
  InvalidArgument: 'name' is nil

==========================================
insert duplicate location name in a batch
------------------------------------------
GIVEN:
WHEN:
  AddLocationsReq locs:{name:"W"}  locs:{name:"W"}
ERROR:
  AlreadyExists: already exists

==========================================
add location with duplicate name
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"W"
WHEN:
  AddLocationsReq locs:{name:"W"}
ERROR:
  AlreadyExists: already exists

==========================================
duplicates are OK, if they don't share a parent
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"WHS1"
  LocationAdded id:2  name:"Inbox"  parent:1
  LocationAdded id:3  name:"WHS2"
WHEN:
  AddLocationsReq locs:{name:"Inbox"}  parent:3
THEN:
  AddLocationsResp locs:{name:"Inbox"  id:4  parent:3}
EVENTS:
  LocationAdded id:4  name:"Inbox"  parent:3

==========================================
query locations after removal
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Shelf"
  ProductAdded id:1  sku:"NVidia"
  InventoryUpdated location:1  product:1  OnHandChange:3  OnHand:3
  InventoryUpdated location:1  product:1  OnHandChange:-3
WHEN:
  GetLocInventoryReq location:1
THEN:
  GetLocInventoryResp 

==========================================
query one specific location
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Shelf1"
WHEN:
  ListLocationsReq location:1
THEN:
  ListLocationsResp locs:{name:"Shelf1"  id:1}

==========================================
query all locations in a tree
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"WH"
  LocationAdded id:2  name:"Shelf1"  parent:1
  LocationAdded id:3  name:"Shelf2"  parent:1
WHEN:
  ListLocationsReq location:1
THEN:
  ListLocationsResp locs:{name:"WH"  id:1  chidren:{name:"Shelf1"  id:2  parent:1}  chidren:{name:"Shelf2"  id:3  parent:1}}

==========================================
query locations from another root
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"WH1"
  LocationAdded id:2  name:"WH2"
  LocationAdded id:3  name:"Shelf"  parent:1
WHEN:
  ListLocationsReq location:2
THEN:
  ListLocationsResp locs:{name:"WH2"  id:2}

==========================================
query locations from non-existent location
------------------------------------------
GIVEN:
WHEN:
  ListLocationsReq location:1
ERROR:
  NotFound: location not found

==========================================
query all locations
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"WH1"
  LocationAdded id:2  name:"WH2"
  LocationAdded id:3  name:"Shelf"  parent:1
WHEN:
  ListLocationsReq 
THEN:
  ListLocationsResp locs:{name:"WH1"  id:1  chidren:{name:"Shelf"  id:3  parent:1}}  locs:{name:"WH2"  id:2}

==========================================
move locations
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Warehouse"
  LocationAdded id:2  name:"Container"
WHEN:
  MoveLocationReq id:2  newParent:1
THEN:
  MoveLocationResp 
EVENTS:
  LocationMoved id:2  newParent:1

==========================================
recursive locations are not allowed
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Warehouse"
  LocationAdded id:2  name:"Container"  parent:1
WHEN:
  MoveLocationReq id:1  newParent:2
ERROR:
  FailedPrecondition: bad location move

==========================================
don't move location to itself
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Warehouse"
WHEN:
  MoveLocationReq id:1  newParent:1
ERROR:
  FailedPrecondition: bad location move

==========================================
can't touch root
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Warehouse"
WHEN:
  MoveLocationReq newParent:1
ERROR:
  FailedPrecondition: bad location move

==========================================
create new products
------------------------------------------
GIVEN:
WHEN:
  AddProductsReq skus:"one"  skus:"two"
THEN:
  AddProductsResp ids:1  ids:2
EVENTS:
  ProductAdded id:1  sku:"one"
  ProductAdded id:2  sku:"two"

==========================================
one failing product fails the batch
------------------------------------------
GIVEN:
WHEN:
  AddProductsReq skus:"one"  skus:"one"
ERROR:
  AlreadyExists: already exists

==========================================
query inventory
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"Cola"
  ProductAdded id:2  sku:"Fanta"
  LocationAdded id:1  name:"Shelf"
  InventoryUpdated location:1  product:2  OnHandChange:2  OnHand:2
WHEN:
  GetLocInventoryReq location:1
THEN:
  GetLocInventoryResp items:{Product:2  OnHand:2  Available:2}

==========================================
moving container to warehouse increases total quantity
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"NVidia 4080"
  LocationAdded id:1  name:"Warehouse"
  LocationAdded id:2  name:"Unloading"  parent:1
  LocationAdded id:3  name:"Shelf"  parent:1
  InventoryUpdated location:3  product:1  OnHandChange:5  OnHand:5
  LocationAdded id:4  name:"Container"
  InventoryUpdated location:4  product:1  OnHandChange:10  OnHand:10
  LocationMoved id:4  newParent:2
WHEN:
  GetLocInventoryReq location:1
THEN:
  GetLocInventoryResp items:{Product:1  OnHand:15  Available:15}

==========================================
moving container to warehouse increases unloading quantity
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"NVidia 4080"
  LocationAdded id:1  name:"Warehouse"
  LocationAdded id:2  name:"Unloading"  parent:1
  LocationAdded id:3  name:"Shelf"  parent:1
  InventoryUpdated location:3  product:1  OnHandChange:5  OnHand:5
  LocationAdded id:4  name:"Container"
  InventoryUpdated location:4  product:1  OnHandChange:10  OnHand:10
  LocationMoved id:4  newParent:2
WHEN:
  GetLocInventoryReq location:2
THEN:
  GetLocInventoryResp items:{Product:1  OnHand:10  Available:10}

==========================================
reservation reduces availability
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"pixel"
  LocationAdded id:1  name:"Warehouse"
  InventoryUpdated location:1  product:1  OnHandChange:10  OnHand:10
  Reserved reservation:1  code:"sale"  items:{product:1  quantity:3  location:1}
WHEN:
  GetLocInventoryReq location:1
THEN:
  GetLocInventoryResp items:{Product:1  OnHand:10  Available:7}

==========================================
moving container with a reservation
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"NVidia 4080"
  LocationAdded id:1  name:"Warehouse"
  LocationAdded id:2  name:"Unloading"  parent:1
  LocationAdded id:3  name:"Shelf"  parent:1
  InventoryUpdated location:3  product:1  OnHandChange:5  OnHand:5
  Reserved reservation:1  code:"sale1"  items:{product:1  quantity:3  location:3}
  LocationAdded id:4  name:"Container"
  InventoryUpdated location:4  product:1  OnHandChange:10  OnHand:10
  Reserved reservation:2  code:"sale3"  items:{product:1  quantity:9  location:4}
  LocationMoved id:4  newParent:2
WHEN:
  GetLocInventoryReq location:1
THEN:
  GetLocInventoryResp items:{Product:1  OnHand:15  Available:3}

==========================================
reserve sale with one item
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"GPU"
  LocationAdded id:1  name:"Shelf"
  InventoryUpdated location:1  product:1  OnHandChange:10  OnHand:10
WHEN:
  ReserveReq reservation:"sale"  items:{sku:"GPU"  quantity:10}
THEN:
  ReserveResp reservation:1
EVENTS:
  Reserved reservation:1  code:"sale"  items:{product:1  quantity:10}

==========================================
reserve non-existent sku
------------------------------------------
GIVEN:
WHEN:
  ReserveReq reservation:"test"  items:{sku:"sale"  quantity:1}
ERROR:
  NotFound: product not found

==========================================
reserve when onHand isn't enough
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"cola"
  LocationAdded id:1  name:"WHS1"
  InventoryUpdated location:1  product:1  OnHandChange:2  OnHand:2
WHEN:
  ReserveReq reservation:"test"  items:{sku:"cola"  quantity:3}
ERROR:
  FailedPrecondition: not enough quantity

==========================================
over-reserve
------------------------------------------
GIVEN:
  ProductAdded id:1  sku:"cola"
  LocationAdded id:1  name:"WHS1"
  InventoryUpdated location:1  product:1  OnHandChange:2  OnHand:2
  Reserved reservation:1  code:"sale"  items:{product:1  quantity:1  location:1}
WHEN:
  ReserveReq reservation:"test"  items:{sku:"cola"  quantity:2}
ERROR:
  FailedPrecondition: not enough quantity

==========================================
don't allow negative on-hand
------------------------------------------
GIVEN:
  LocationAdded id:1  name:"Shelf"
  ProductAdded id:1  sku:"NVidia"
WHEN:
  UpdateInventoryReq location:1  product:1  OnHandChange:-1
ERROR:
  FailedPrecondition: not enough quantity

